<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="49" failed="0" total="49" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="684" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
    <groups>
      <group name="End2End">
        <method signature="validateHomePage.allLinksHomePage()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="allLinksHomePage" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.homePNavigationDisplayed()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="homePNavigationDisplayed" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validFCSelenimLinks()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSelenimLinks" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validFCSelenimRate()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSelenimRate" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validFCSeleniumPrice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSeleniumPrice" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarAbout()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarAbout" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarBlog()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarBlog" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarContact()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarContact" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarCourses()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarCourses" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarIntGuides()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarIntGuides" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarPractice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarPractice" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarVideos()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarVideos" class="WebTestFrame.validateHomePage"/>
        <method signature="validateLogin.validEmailPwd(java.lang.String, java.lang.String)[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validEmailPwd" class="WebTestFrame.validateLogin"/>
        <method signature="ValidatePractice.validPracMouseHovrReload()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracMouseHovrReload" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracMouseHovrTop()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracMouseHovrTop" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeCheckbox()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeCheckbox" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeDropdown()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeDropdown" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeElementDisplayed()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeElementDisplayed" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeRadio()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeRadio" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeSwitchAlert()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchAlert" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeSwitchTab()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchTab" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeSwitchWindow()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchWindow" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validPracticeWebTable()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeWebTable" class="WebTestFrame.ValidatePractice"/>
        <method signature="ValidatePractice.validSuggessionTxtBox()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validSuggessionTxtBox" class="WebTestFrame.ValidatePractice"/>
      </group> <!-- End2End -->
      <group name="Smoke">
        <method signature="validateCreateAccount.validEmailReqdError()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validEmailReqdError" class="WebTestFrame.validateCreateAccount"/>
        <method signature="validateHomePage.validNaviBarCourses()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarCourses" class="WebTestFrame.validateHomePage"/>
        <method signature="validateHomePage.validNaviBarPractice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarPractice" class="WebTestFrame.validateHomePage"/>
        <method signature="validateLogin.validEmailPwd(java.lang.String, java.lang.String)[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validEmailPwd" class="WebTestFrame.validateLogin"/>
        <method signature="validateLogin.validForgetPwd()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validForgetPwd" class="WebTestFrame.validateLogin"/>
        <method signature="ValidatePractice.validPracticeSwitchWindow()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchWindow" class="WebTestFrame.ValidatePractice"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Test1" duration-ms="285" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
      <class name="WebTestFrame.validateCreateAccount">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at resources.base.initializeDriver(base.java:33)
	at WebTestFrame.validateCreateAccount.initialize(validateCreateAccount.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="validEmailReqdError()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validEmailReqdError" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailReqdError -->
        <test-method status="SKIP" signature="validEmailAdd()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validEmailAdd" duration-ms="4" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailAdd -->
        <test-method status="SKIP" signature="validFullName()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validFullName" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFullName -->
        <test-method status="SKIP" signature="validPwdNull()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validPwdNull" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPwdNull -->
        <test-method status="SKIP" signature="validPwdLength()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validPwdLength" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPwdLength -->
        <test-method status="SKIP" signature="validConPwdSame()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validConPwdSame" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validConPwdSame -->
        <test-method status="SKIP" signature="validConPwdNotSame()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validConPwdNotSame" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validConPwdNotSame -->
        <test-method status="SKIP" signature="validPolicyCheckBox()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validPolicyCheckBox" duration-ms="23" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPolicyCheckBox -->
        <test-method status="SKIP" signature="validErrorColor()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validErrorColor" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validErrorColor -->
        <test-method status="SKIP" signature="validErrorBgColor()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="validErrorBgColor" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validErrorBgColor -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:WebTestFrame.validateCreateAccount@293a5bf6]" name="teardown" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- WebTestFrame.validateCreateAccount -->
    </test> <!-- Test1 -->
    <test name="Test3" duration-ms="155" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
      <class name="WebTestFrame.validateHomePage">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="initialize" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at resources.base.initializeDriver(base.java:33)
	at WebTestFrame.validateHomePage.initialize(validateHomePage.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="allLinksHomePage()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="allLinksHomePage" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allLinksHomePage -->
        <test-method status="SKIP" signature="homePNavigationDisplayed()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="homePNavigationDisplayed" duration-ms="7" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePNavigationDisplayed -->
        <test-method status="SKIP" signature="validFCSeleStudEnrol()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSeleStudEnrol" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFCSeleStudEnrol -->
        <test-method status="SKIP" signature="validFCSelenimLinks()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSelenimLinks" duration-ms="5" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFCSelenimLinks -->
        <test-method status="SKIP" signature="validFCSelenimRate()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSelenimRate" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFCSelenimRate -->
        <test-method status="SKIP" signature="validFCSeleniumDiscPrice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSeleniumDiscPrice" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFCSeleniumDiscPrice -->
        <test-method status="SKIP" signature="validFCSeleniumPrice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFCSeleniumPrice" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFCSeleniumPrice -->
        <test-method status="SKIP" signature="validFeaturedCourses()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validFeaturedCourses" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFeaturedCourses -->
        <test-method status="SKIP" signature="validNaviBarAbout()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarAbout" duration-ms="8" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarAbout -->
        <test-method status="SKIP" signature="validNaviBarBlog()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarBlog" duration-ms="7" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarBlog -->
        <test-method status="SKIP" signature="validNaviBarContact()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarContact" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarContact -->
        <test-method status="SKIP" signature="validNaviBarCourses()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarCourses" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarCourses -->
        <test-method status="SKIP" signature="validNaviBarHome()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarHome" duration-ms="6" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarHome -->
        <test-method status="SKIP" signature="validNaviBarIntGuides()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarIntGuides" duration-ms="7" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarIntGuides -->
        <test-method status="SKIP" signature="validNaviBarPractice()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarPractice" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarPractice -->
        <test-method status="SKIP" signature="validNaviBarVideos()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="validNaviBarVideos" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validNaviBarVideos -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:WebTestFrame.validateHomePage@77888435]" name="teardown" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- WebTestFrame.validateHomePage -->
    </test> <!-- Test3 -->
    <test name="Test5" duration-ms="73" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
      <class name="WebTestFrame.validateLogin">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="initialize" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at resources.base.initializeDriver(base.java:33)
	at WebTestFrame.validateLogin.initialize(validateLogin.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="validPopClose()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validPopClose" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPopClose -->
        <test-method status="SKIP" signature="validEmailPwd(java.lang.String, java.lang.String)[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validEmailPwd" duration-ms="2" started-at="2018-11-08T08:02:51Z" data-provider="getData" finished-at="2018-11-08T08:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gourav@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailPwd -->
        <test-method status="SKIP" signature="validEmailPwd(java.lang.String, java.lang.String)[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validEmailPwd" duration-ms="3" started-at="2018-11-08T08:02:51Z" data-provider="getData" finished-at="2018-11-08T08:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gourav]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[145789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailPwd -->
        <test-method status="SKIP" signature="validEmailPwd(java.lang.String, java.lang.String)[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validEmailPwd" duration-ms="3" started-at="2018-11-08T08:02:51Z" data-provider="getData" finished-at="2018-11-08T08:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gourav@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[145789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailPwd -->
        <test-method status="SKIP" signature="validErrorColor()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validErrorColor" duration-ms="4" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validErrorColor -->
        <test-method status="SKIP" signature="validErrorBgColor()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validErrorBgColor" duration-ms="5" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validErrorBgColor -->
        <test-method status="SKIP" signature="validForgetPwd()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="validForgetPwd" duration-ms="6" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validForgetPwd -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:WebTestFrame.validateLogin@41d477ed]" name="teardown" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- WebTestFrame.validateLogin -->
    </test> <!-- Test5 -->
    <test name="Test2" duration-ms="26" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
      <class name="WebTestFrame.validateContact">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="initialize" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at resources.base.initializeDriver(base.java:33)
	at WebTestFrame.validateContact.initialize(validateContact.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="validContactTitle()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="validContactTitle" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactTitle -->
        <test-method status="SKIP" signature="validContactDetlsLable()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="validContactDetlsLable" duration-ms="3" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactDetlsLable -->
        <test-method status="SKIP" signature="validContactAddr()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="validContactAddr" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactAddr -->
        <test-method status="SKIP" signature="validContactPhone()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="validContactPhone" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactPhone -->
        <test-method status="SKIP" signature="validContactEmails()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="validContactEmails" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactEmails -->
        <test-method status="SKIP" signature="databaseConnLogin()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="databaseConnLogin" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- databaseConnLogin -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:WebTestFrame.validateContact@765d7657]" name="teardown" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- WebTestFrame.validateContact -->
    </test> <!-- Test2 -->
    <test name="Test4" duration-ms="88" started-at="2018-11-08T13:02:51Z" finished-at="2018-11-08T13:02:51Z">
      <class name="WebTestFrame.ValidatePractice">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="initialize" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/gouravdas/git/DevTestFramework/BuildTestFrame/driver/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:140)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at resources.base.initializeDriver(base.java:33)
	at WebTestFrame.ValidatePractice.initialize(ValidatePractice.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="validPracticeLink()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeLink" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeLink -->
        <test-method status="SKIP" signature="validPracticeDropdown()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeDropdown" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeDropdown -->
        <test-method status="SKIP" signature="validPracticeRadio()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeRadio" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeRadio -->
        <test-method status="SKIP" signature="validSuggessionTxtBox()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validSuggessionTxtBox" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validSuggessionTxtBox -->
        <test-method status="SKIP" signature="validPracticeCheckbox()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeCheckbox" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeCheckbox -->
        <test-method status="SKIP" signature="validPracticeSwitchWindow()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchWindow" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeSwitchWindow -->
        <test-method status="SKIP" signature="validPracticeSwitchTab()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchTab" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeSwitchTab -->
        <test-method status="SKIP" signature="validPracticeSwitchAlert()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeSwitchAlert" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeSwitchAlert -->
        <test-method status="SKIP" signature="validPracticeElementDisplayed()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeElementDisplayed" duration-ms="4" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeElementDisplayed -->
        <test-method status="SKIP" signature="validPracticeWebTable()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracticeWebTable" duration-ms="2" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracticeWebTable -->
        <test-method status="SKIP" signature="validPracMouseHovrTop()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracMouseHovrTop" duration-ms="42" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracMouseHovrTop -->
        <test-method status="SKIP" signature="validPracMouseHovrReload()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="validPracMouseHovrReload" duration-ms="1" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validPracMouseHovrReload -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:WebTestFrame.ValidatePractice@6b2ea799]" name="teardown" is-config="true" duration-ms="0" started-at="2018-11-08T08:02:51Z" finished-at="2018-11-08T08:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- WebTestFrame.ValidatePractice -->
    </test> <!-- Test4 -->
  </suite> <!-- Suite -->
</testng-results>
